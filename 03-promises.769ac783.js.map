{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,SACtBD,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBAmBxC,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAC3B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,W,GAMRN,EAAMO,M,IA1BbZ,EAAOa,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBAON,IANA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYb,EAAKW,EAALX,MAAOc,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGvBhB,EAAW,EAENiB,EAAI,EAAGA,EAAID,EAAOR,MAAOS,GAAK,EACrCjB,GAAY,EACZC,EAAMO,OAASO,EAAKP,MACpBT,EAAcC,EAAUC,EAAMO,M","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\nformEl.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let position = 0;\n\n  for (let i = 0; i < amount.value; i += 1) {\n    position += 1;\n    delay.value += step.value;\n    createPromise(position, delay.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n      } else {\n        // Reject\n      }\n    }, delay.value);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","Promise","resolve","reject","setTimeout","value","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","i"],"version":3,"file":"03-promises.769ac783.js.map"}